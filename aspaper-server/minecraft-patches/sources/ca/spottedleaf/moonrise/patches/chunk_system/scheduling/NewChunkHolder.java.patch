--- a/ca/spottedleaf/moonrise/patches/chunk_system/scheduling/NewChunkHolder.java
+++ b/ca/spottedleaf/moonrise/patches/chunk_system/scheduling/NewChunkHolder.java
@@ -912,13 +_,24 @@
             }
 
             if (chunk instanceof LevelChunk levelChunk) {
+                //ASP start - unloadStage1 sets the entitySlices to null, so we can't get them otherwise unfortunately.
+                //This needs to be above world.unload since world.unload removes block entities
+                if(world instanceof com.infernalsuite.asp.level.SlimeLevelInstance instance) {
+                    instance.unload(levelChunk, entityChunk, poiChunk);
+                }
+                //ASP end
                 this.world.unload(levelChunk);
             }
+
         }
 
         // unload entity data
         if (entityChunk != null) {
-            this.saveEntities(entityChunk, true);
+            //ASP start - prevent saving
+            if(!(world instanceof com.infernalsuite.asp.level.SlimeLevelInstance)) {
+                this.saveEntities(entityChunk, true);
+            }
+            //ASP end - prevent saving
             // yes this is a hack to pass the compound tag through...
             final CompoundTag lastEntityUnload = this.lastEntityUnload;
             this.lastEntityUnload = null;
@@ -1717,6 +_,12 @@
         boolean canSaveChunk = !forceNoSaveChunk && (chunk != null && ((shutdown || chunk instanceof LevelChunk) && chunk.isUnsaved()));
         boolean canSavePOI = !forceNoSaveChunk && (poi != null && poi.isDirty());
         boolean canSaveEntities = entities != null;
+
+        //ASP start - prevent saving
+        if(world instanceof com.infernalsuite.asp.level.SlimeLevelInstance) {
+            canSaveEntities = false;
+        }
+        //ASP end - prevent saving
 
         if (canSaveChunk) {
             canSaveChunk = this.saveChunk(chunk, false);
